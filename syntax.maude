fmod SYNTAX is
  protecting CHANSET .

  *** Syntax and axioms of structural congruence
  sort Guard .
  op _<_> : Chan Chan -> Guard [frozen prec 6] .
  op _(_) : Chan Qid -> Guard [prec 5] .

  sort Agent .
  op _|_ : Agent Agent -> Agent [frozen assoc comm prec 15 id: nil] .
  op [_]_ : Qid Agent -> Agent [frozen prec 8] .
  op !_ : Agent -> Agent [frozen prec 10] .

  sort Sum .
  subsort Sum < Agent .
  op nil : -> Sum .
  op _._ : Guard Agent -> Sum [frozen prec 7] .
  op _+_ : Sum Sum -> Sum [frozen assoc comm prec 12 id: nil] .

  *** Substitution rules
  var S : Subst .
  vars a b : Chan .
  vars P Q : Agent .
  var x : Qid .
  op __ : Subst Agent -> Agent [prec 3] .
  eq S (a(x) . P) = (S a)(x) . ([lift x S] P) .
  eq S (a < b > . P) = (S a) < (S b) > . (S P) .
  eq S ([x] P) = [x] ([lift x S] P) .
  eq S (! P) = ! (S P) .
  eq S (P | Q) = (S P) | (S Q) . *** if Q =/= nil and P =/= nil .
  eq S nil = nil .
  eq S (P + Q) = (S P) + (S Q) .

  *** Free names in an agent
  op fn : Agent -> Chanset .
  eq fn(nil) = mt .
  eq fn(a < b > . P ) = a b .
  eq fn(a(x) . P) = a down(x, fn(P)) .
  eq fn(P | Q) = fn(P) fn(Q) . *** if P =/= nil and Q =/= nil .
  eq fn(P + Q) = fn(P) fn(Q) .
  eq fn([x] P) = down(x, fn(P)) .
  eq fn(! P) = fn(P) .
endfm
